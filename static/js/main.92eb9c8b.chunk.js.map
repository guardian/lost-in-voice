{"version":3,"sources":["StickyNote.tsx","pages/landing/stars.ts","pages/landing/landingStyles.ts","pages/landing/Landing.tsx","pages/Page.tsx","services/timing.ts","services/speaker.ts","assets/explosion.wav","dialog/index.ts","pages/tasks/TaskOneForm.tsx","pages/tasks/TaskOne.tsx","pages/tasks/TaskTwo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["stickyContainer","stickyOuter","sticky","stickyContent","StickyNote","css","aria-hidden","randomUntil","num","Math","floor","random","boxShadowStars","quantity","Array","from","length","neutral","join","allowsAnimation","starsSmall","starsMedium","starsBig","starAnimation","keyframes","starFieldBackground","smallStars","mediumStars","bigStars","landingHeading","landing","space","Landing","name","setName","start","onSubmit","label","value","onChange","width","priority","size","type","pageStyles","Page","children","onRender","useState","dialogPending","setDialogPending","useEffect","wait","time","Promise","resolve","setTimeout","synth","window","speechSynthesis","substitute","baseString","substitutions","reduce","newString","sub","index","replace","say","speech","reject","utterance","SpeechSynthesisUtterance","addEventListener","console","log","speak","audioEnded","audio","startGame","a","computerLine","greeting","Audio","explosion","play","firstTask","taskOne","firstTaskOutcome","success","taskOnePass","taskOneFail","secondTaskOutcome","taskTwoPass","taskTwoFail","initialState","faultRod","engineTemp","radiationLevel","foldRate","batStatus","TaskOneForm","responses","setResponses","onFieldChange","field","event","target","checked","preventDefault","htmlFor","id","defaultChecked","randomNumberBetween","min","max","parseFloat","toFixed","TaskOne","done","faultyFuelRod","fuelRodCount","curieLevels","foldRates","cycles","_","cycle","rate","getFoldRates","bats","batFoods","batMoods","map","mood","timeAsleep","lastMeal","getBats","assessResponse","engineStatus","curieDanger","slice","some","level","highestFoldRate","fRate","correctRate","find","response","fuelRodCorrect","parseInt","engineCorrect","radiationCorrect","foldRateCorrect","createResponseAssessment","taskAnnounced","setTaskAnnounced","taskPromptRequest","shiftKey","key","toUpperCase","removeEventListener","status","reversed","bat","TaskTwo","taskRoot","createRef","unusual","setUnusual","current","focus","tabIndex","ref","App","task","setTask","isStarted","setStarted","input","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92eb9c8b.chunk.js","sourcesContent":["import { css } from \"@emotion/react\";\n\nconst stickyContainer = css`\n  width: 270px;\n  position: absolute;\n  bottom: 20px;\n  transform: rotate(5deg);\n  right: 20px;\n`;\n\nconst stickyOuter = css`\n  display: flex;\n  padding-top: 92.5925926%;\n  position: relative;\n  width: 100%;\n`;\n\nconst sticky = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\n/* The sticky note itself */\nconst stickyContent = css`\n  background: linear-gradient(\n    180deg,\n    rgba(187, 235, 255, 1) 0%,\n    rgba(187, 235, 255, 1) 12%,\n    rgba(170, 220, 241, 1) 75%,\n    rgba(195, 229, 244, 1) 100%\n  );\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Marker Felt', cursive;\n  font-size: 1.25rem;\n`;\n\nfunction StickyNote() {\n  return <div css={stickyContainer} aria-hidden=\"true\">\n        <div css={stickyOuter}>\n          <div css={sticky}>\n            <div css={stickyContent}>\n              Spoken interface notes\n              <ul>\n                <li>Command + F5 to start</li>\n                <li>Ctrl + Option + arrow keys to navigate</li>\n                <li>Try Ctrl + Option + U for the rotor!</li>\n              </ul>\n              <span>- Captain Kaur</span>\n            </div>\n          </div>\n        </div>\n      </div>\n}\n\nexport default StickyNote","import { neutral } from \"@guardian/src-foundations/palette\";\nimport { css, keyframes } from '@emotion/react/macro';\n\nfunction randomUntil(num: number) {\n  return Math.floor(Math.random() * num);\n}\n\nfunction boxShadowStars(quantity: number) {\n  return Array.from({ length: quantity }, () => {\n    return `${randomUntil(2000)}px ${randomUntil(2000)}px ${neutral[100]}`\n  }).join(' , ');\n}\n\nconst allowsAnimation = '@media (prefers-reduced-motion: no-preference)';\n\nconst starsSmall = boxShadowStars(700);\nconst starsMedium = boxShadowStars(200);\nconst starsBig = boxShadowStars(100);\n\nconst starAnimation = keyframes`\n    from\t{\n      transform: translateY(0px);\n    }\n    to {\n      transform: translateY(-2000px);\n    }\n`;\n\nexport const starFieldBackground = css`\n  height: 100vh;\n  background: radial-gradient(ellipse at bottom, #1B2735 0%, #090A0F 100%);\n  overflow: hidden;\n`;\n\nexport const smallStars = css`\n  width: 1px;\n  height: 1px;\n  background: transparent;\n  box-shadow: ${starsSmall};\n  ${allowsAnimation} {\n    animation: ${starAnimation} 50s linear infinite;\n  }\n    \n  &:after {\n    content: \" \";\n    position: absolute;\n    top: 2000px;\n    width: 1px;\n    height: 1px;\n    background: transparent;\n    box-shadow: ${starsSmall};\n  }\n`;\n\nexport const mediumStars = css`\n  width: 2px;\n  height: 2px;\n  background: transparent;\n  box-shadow: ${starsMedium};\n  ${allowsAnimation} {\n    animation: ${starAnimation} 100s linear infinite;\n  }\n    \n  &:after {\n    content: \" \";\n    position: absolute;\n    top: 2000px;\n    width: 2px;\n    height: 2px;\n    background: transparent;\n    box-shadow: ${starsMedium};\n  }\n`;\n\nexport const bigStars = css`\n  width: 3px;\n  height: 3px;\n  background: transparent;\n  box-shadow: ${starsBig};\n  ${allowsAnimation} {\n    animation: ${starAnimation} 150s linear infinite;\n  }\n  \n  &:after {\n    content: \" \";\n    position: absolute;\n    top: 2000px;\n    width: 3px;\n    height: 3px;\n    background: transparent;\n    box-shadow: ${starsBig};\n  }  \n`;","import { neutral } from \"@guardian/src-foundations/palette\";\nimport { space } from \"@guardian/src-foundations\";\nimport { css } from \"@emotion/react\";\n\nexport const landingHeading = css`\n  margin-top: 0;\n`;\n\nexport const landing = css`\n  padding: ${space[9]}px;\n  width: 50%;\n  margin: 0 auto;\n  margin-top: 10%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${neutral[100]};\n  text-align: center;\n  \n  label {\n    text-align: left;\n  }\n`;\n","import { ChangeEvent, FormEvent } from \"react\";\nimport { TextInput } from \"@guardian/src-text-input\"\nimport { Button } from \"@guardian/src-button\"\nimport { starFieldBackground, smallStars, mediumStars, bigStars } from \"./stars\";\nimport { landing, landingHeading } from \"./landingStyles\";\n\ntype LandingProps = {\n  name: string,\n  setName: (event: ChangeEvent<HTMLInputElement>) => void\n  start: (event: FormEvent<HTMLFormElement>) => void\n}\n\nfunction Landing({ name, setName, start }: LandingProps) {\n  return (\n    <div css={starFieldBackground}>\n      <div css={smallStars}></div>\n      <div css={mediumStars}></div>\n      <div css={bigStars}></div>\n      <section css={landing}>\n        <h1 css={landingHeading}>Welcome aboard the HMSS Aderin-Pocock</h1>\n        <p>\n          Congratulations on being selected to join the crew of Her Majesty's Starship Aderin-Pocock, a joint European deep space scientific mission.\n        </p>\n        <p>\n          Before you reach your first destination, you will enjoy five years of cryosleep while the ship's automated systems guide you out of our solar\n          system and into the galaxy beyond. What could possibly go wrong?\n        </p>\n        \n        <form onSubmit={start}>\n          <TextInput\n            label=\"Please enter your name\"\n            value={name}\n            onChange={setName}\n            width={30}\n          />\n          <Button\n            priority=\"primary\"\n            size=\"default\"\n            type=\"submit\"\n          >\n            Start\n          </Button>\n        </form>\n        <p>\n          This game is designed to be played on macOS Safari\n        </p>\n      </section>\n    </div>\n  );\n}\n\nexport default Landing;","import { ReactNode, useEffect, useState } from \"react\";\nimport { neutral } from \"@guardian/src-foundations/palette\";\nimport { css } from \"@emotion/react\";\n\nconst pageStyles = css`\n  height: 100vh;\n  overflow: hidden;\n  background-color: ${neutral[7]};\n  color: ${neutral[7]};\n  \n  & * {\n    margin: 0;\n    border-color: ${neutral[7]};\n    border-style: solid;\n    background-color: ${neutral[7]};\n    opacity: 0; \n  }\n`;\n\ntype PageProps = {\n  children: ReactNode,\n  onRender: () => void\n}\n\nfunction Page({ children, onRender }: PageProps) {\n  const [dialogPending, setDialogPending] = useState(true);\n  \n  useEffect(() => {\n    if (dialogPending) {\n      onRender();\n      setDialogPending(false);\n    }\n  }, [onRender, dialogPending]);\n  \n  return <section css={pageStyles}>\n    {children}\n  </section>\n}\n\nexport default Page;\n","export function wait(time: number) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, time);\n  })\n}","const synth = window.speechSynthesis;\n\nexport function substitute(baseString: string, substitutions: string[]) {\n  return substitutions.reduce((newString, sub, index) => {\n    return newString.replace(`$${index}`, sub);\n  }, baseString);\n}\n\nexport function say(speech: string) {\n  return new Promise((resolve, reject) => {\n    const utterance = new SpeechSynthesisUtterance(speech);\n    utterance.addEventListener('end', resolve);\n    utterance.addEventListener('error', reject);\n    utterance.addEventListener('start', () => console.log(speech));\n    synth.speak(utterance);\n  })\n}","export default __webpack_public_path__ + \"static/media/explosion.785d5dec.wav\";","import { say, substitute } from \"../services/speaker\";\nimport { greeting, taskOne, taskOneFail, taskOnePass, taskTwoFail, taskTwoPass } from \"./dialog.json\";\nimport explosion from \"../assets/explosion.wav\";\n\nfunction audioEnded(audio) {\n  return new Promise((resolve) => {\n    audio.addEventListener('ended', resolve);\n  })\n}\n\nexport async function startGame(name: string) {\n  const computerLine = async () => await say(substitute(greeting, [name]));\n  try {\n    const audio = new Audio(explosion);\n    await audio.play();\n    await audioEnded(audio);\n    return computerLine();\n  } catch (error) {\n    return computerLine();\n  }\n}\n\nexport async function firstTask() {\n  await say(taskOne);\n}\n\nexport async function firstTaskOutcome(success: boolean, name: string) {\n  if (success) {\n    return say(taskOnePass);\n  }\n  return say(substitute(taskOneFail, [name]));\n}\n\nexport async function secondTaskOutcome(success: boolean, name: string) {\n  if (success) {\n    return say(taskTwoPass);\n  }\n  return say(substitute(taskTwoFail, [name]));\n}","import { ChangeEvent, FormEvent, useState } from \"react\";\n\ntype EngineTemp = 'normal' | 'high' | 'low'\n\ntype YesNoResponse = 'yes' | 'no'\n\ntype TaskOneField = 'faultRod' | 'engineTemp' | 'radiationLevel' | 'foldRate' | 'batStatus'\n\nexport type TaskOneResponse = {\n  faultRod: string,\n  engineTemp: EngineTemp,\n  radiationLevel: YesNoResponse,\n  foldRate: string,\n  batStatus: YesNoResponse\n}\n\nconst initialState: TaskOneResponse = {\n  faultRod: '1',\n  engineTemp: 'normal',\n  radiationLevel: 'no',\n  foldRate: 'A',\n  batStatus: 'yes'\n}\n\ntype TaskOneFormProps = {\n  onSubmit: (response: TaskOneResponse) => void\n}\n\nfunction TaskOneForm({ onSubmit }: TaskOneFormProps) {\n  const [responses, setResponses] = useState(initialState);\n  \n  function onFieldChange(field: TaskOneField) {\n    return function onChange(event: ChangeEvent<HTMLInputElement>) {\n      console.log(field);\n      if (event.target.type === 'text' || event.target.checked) {\n        setResponses({\n          ...responses,\n          [field]: event.target.value,\n        });\n      }\n    }\n  }\n  \n  function onFormSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    onSubmit(responses);\n  }\n  \n  return <div>\n    <h2>Engine Fault Reporting Form</h2>\n    <form onSubmit={onFormSubmit}>\n      <div>\n        <label htmlFor=\"rods\">\n          Faulty fuel rod numbers, if any\n        </label>\n        <input type=\"text\" name=\"rods\" id=\"rods\" value={responses.faultRod} onChange={onFieldChange('faultRod')}/>\n      </div>\n      <div>\n        <label htmlFor=\"folds\">\n          Cycle with highest fold rate\n        </label>\n        <input type=\"text\" name=\"folds\" id=\"folds\" value={responses.foldRate} onChange={onFieldChange('foldRate')} />\n      </div>\n      <fieldset>\n        <legend>What is the engine temperature status?</legend>\n        <label htmlFor=\"normal\">\n          <input type=\"radio\" name=\"temp\" id=\"normal\" value=\"normal\" onChange={onFieldChange('engineTemp')} defaultChecked />\n          Normal\n        </label>\n        <label htmlFor=\"high\">\n          <input type=\"radio\" name=\"temp\" id=\"high\" value=\"high\" onChange={onFieldChange('engineTemp')} />\n          High\n        </label>\n        <label htmlFor=\"low\">\n          <input type=\"radio\" name=\"temp\" id=\"low\" value=\"low\" onChange={onFieldChange('engineTemp')} />\n          Low\n        </label>\n      </fieldset>\n      <fieldset>\n        <legend>Has the radiation risen to unsafe levels in the last half hour?</legend>\n        <label htmlFor=\"yes\">\n          <input type=\"radio\" name=\"radiation\" id=\"yes\" value=\"yes\" onChange={onFieldChange('radiationLevel')} />\n          Yes\n        </label>\n        <label htmlFor=\"no\">\n          <input type=\"radio\" name=\"radiation\" id=\"no\" value=\"no\" onChange={onFieldChange('radiationLevel')} defaultChecked />\n          No\n        </label>\n      </fieldset>\n      <fieldset>\n        <legend>How are the bats?</legend>\n        <label htmlFor=\"okay\">\n          <input type=\"radio\" name=\"bats\" id=\"okay\" value=\"yes\" onChange={onFieldChange('batStatus')} defaultChecked />\n          They seem fine\n        </label>\n        <label htmlFor=\"whocan\">\n          <input type=\"radio\" name=\"bats\" id=\"whocan\" value=\"no\" onChange={onFieldChange('batStatus')} />\n          Who can say?\n        </label>\n      </fieldset>\n      <input type=\"submit\" value=\"Assess engine faults\"/>\n    </form>\n  </div>\n}\n\nexport default TaskOneForm;","import React, { useEffect, useState } from \"react\"\nimport { TaskProps } from \"./types\";\nimport { wait } from \"../../services/timing\";\nimport { firstTask, firstTaskOutcome } from \"../../dialog\";\nimport TaskOneForm, { TaskOneResponse } from \"./TaskOneForm\";\n\ntype FoldRate = {\n  cycle: string,\n  rate: number,\n}\n\nconst fuelRodCount = 15;\nconst minEngineTemp = -500;\nconst maxEngineTemp = 2000;\nconst maxRadiation = 1.2;\n\nfunction randomNumberBetween(min: number, max: number, floor = true) {\n  if (floor) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  return parseFloat((Math.random() * max + min).toFixed(3));\n}\n\nfunction getFoldRates(): FoldRate[] {\n  const cycles = ['E','D','C','B','A'];\n  return Array.from({ length: 5 }, (_, index) => ({\n    cycle: cycles[index],\n    rate: randomNumberBetween(5, 25),\n  }))\n}\n\nfunction getCurieLevels() {\n  return Array.from({ length: 6 }, () => randomNumberBetween(0, maxRadiation, false))\n}\n\nfunction getBats() {\n  const batFoods = ['bugs', 'peach crumble', 'sandwich'];\n  const batMoods = ['happy', 'melancholic', 'philosophical', 'sulky'];\n  const batNames = ['Gertrude', 'Siobhan', 'Jean-Paul', 'Otto', 'Freya'];\n  return batNames.map((name) => {\n    return {\n      name,\n      mood: batMoods[randomNumberBetween(0, batMoods.length - 1)],\n      timeAsleep: randomNumberBetween(5, 20),\n      lastMeal: batFoods[randomNumberBetween(0, batFoods.length - 1)]\n    }\n  })\n}\n\nfunction createResponseAssessment(faultyFuelRod: number, engineTemp: number, curieLevels: number[], foldRates: FoldRate[], name: string, done: () => void) {\n  const engineStatus = engineTemp > 1500 ? 'high' : engineTemp < 500 ? 'low' : 'normal';\n  const curieDanger = curieLevels.slice(0, 3).some(level => level > 1) ? 'yes' : 'no';\n  const highestFoldRate = Math.max(...foldRates.map(fRate => fRate.rate))\n  const correctRate = foldRates.find(foldRate => foldRate.rate === highestFoldRate)\n  \n  return async function assessResponse(response: TaskOneResponse) {\n    const fuelRodCorrect = parseInt(response.faultRod, 10) === faultyFuelRod + 1;\n    const engineCorrect = response.engineTemp === engineStatus;\n    const radiationCorrect = response.radiationLevel === curieDanger;\n    const foldRateCorrect = response.foldRate === correctRate?.cycle;\n    // Wait for any VO prompt to finish\n    await wait(2500);\n    if (fuelRodCorrect && engineCorrect && radiationCorrect && foldRateCorrect) {\n      await firstTaskOutcome(true, name);\n      done();\n    } else {\n      await firstTaskOutcome(false, name);\n    }\n  }\n}\n\nfunction TaskOne({ start, name, done }: TaskProps) {\n  const faultyFuelRod = randomNumberBetween(2, fuelRodCount - 1);\n  const engineTemp = randomNumberBetween(minEngineTemp, maxEngineTemp);\n  const curieLevels = getCurieLevels();\n  const foldRates = getFoldRates();\n  const bats = getBats();\n  \n  const assessResponse = createResponseAssessment(faultyFuelRod, engineTemp, curieLevels, foldRates, name, done);\n  \n  const [taskAnnounced, setTaskAnnounced] = useState(false);\n  \n  useEffect(() => {\n    if (start && !taskAnnounced) {\n      firstTask();\n      setTaskAnnounced(true);\n    }\n  }, [start, taskAnnounced]);\n  \n  useEffect(() => {\n    function taskPromptRequest(event: KeyboardEvent) {\n      if (event.shiftKey && event.key.toUpperCase() === 'S') {\n        firstTask();\n      }\n    }\n    window.addEventListener('keypress', taskPromptRequest);\n    \n    return () => {\n      window.removeEventListener('keypress', taskPromptRequest);\n    }\n  })\n  \n  return (<div>\n    <h1>Labrador Class Engine Diagnostics Interface</h1>\n    <div>\n      <h2>Fuel</h2>\n      <p>Ridium fuel rod status listed in numerical order</p>\n      <ol>\n        {Array.from({ length: fuelRodCount }).map((_, index) => {\n          const status = index === faultyFuelRod ? 'FAULT' : 'OKAY'\n          return <li key={index}>Status:&nbsp;{status}</li>\n        })}\n      </ol>\n    </div>\n    <div>\n      <h2>Temperature</h2>\n      <p>Normal engine temperature range is between 500 and 1500℃</p>\n      <p>\n        Current engine temperature is {engineTemp}℃\n      </p>\n    </div>\n    <div>\n      <h2>Radioactivity</h2>\n      <p>Ambient radiation levels above 1 curie are potentially dangerous. Curie readings for the last hour below:</p>\n      <table>\n        <thead>\n          <tr><th>Timestamp</th>\n          <th>Curie level</th></tr>\n        </thead>\n        <tbody>\n          {curieLevels.map((level, index) => {\n            return <tr key={index}>\n              <td>{(index + 1)* 10}&nbsp;minutes ago</td>\n              <td>{level}</td>\n            </tr>\n          })}\n        </tbody>\n      </table>\n    </div>\n    <div>\n      <h2>Fold Rate</h2>\n      <p>The rate at which the engine performed spacetime folds in the last five alphabetical cycles.</p>\n      <ol type=\"A\" reversed>\n        {foldRates.map((rate) => {\n          return <li key={rate.cycle}>{rate.rate}&nbsp;folds per hour</li>\n        })}\n      </ol>\n    </div>\n    <div>\n      <h2>Bats</h2>\n      <p>Latest status of your Labrador Class Engine's pipistrelle bat colony. Remember, an engine without bats is like a day without smiles!</p>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Mood</th>\n            <th>Sleep this cycle</th>\n            <th>Last meal</th>\n          </tr>\n        </thead>\n        <tbody>\n          {bats.map((bat) => {\n            return <tr key={bat.name}>\n              <td>{bat.name}</td>\n              <td>{bat.mood}</td>\n              <td>{bat.timeAsleep}&nbsp;hours</td>\n              <td>{bat.lastMeal}</td>\n            </tr>\n          })}\n        </tbody>\n      </table>\n    </div>\n    <TaskOneForm onSubmit={assessResponse} />\n  </div>);\n}\n\nexport default TaskOne","import { ChangeEvent, createRef, FormEvent, useEffect, useState } from \"react\";\nimport { TaskProps } from \"./types\";\nimport { secondTaskOutcome } from \"../../dialog\";\nimport { wait } from \"../../services/timing\";\n\nfunction TaskTwo({ name }: TaskProps) {\n  const taskRoot = createRef<HTMLHeadingElement>();\n  \n  const [unusual, setUnusual] = useState('none');\n  \n  async function onSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (unusual === 'none') return;\n    await wait(2500);\n    if (unusual === 'C') {\n      secondTaskOutcome(true, name);\n    } else {\n      secondTaskOutcome(false, name);\n    }\n  }\n  \n  function onInputChange(event: ChangeEvent<HTMLInputElement>) {\n    setUnusual(event.target.value);\n  }\n  \n  useEffect(() => {\n    taskRoot.current?.focus();\n  }, [])\n  \n  return (\n    <article>\n      <h1 tabIndex={-1} ref={taskRoot}>The <s>Very Secret</s> Diary of the Ship's Computer</h1>\n      <article>\n        <h2>Cycle E</h2>\n        <p>Dear Diary. I'm a bit scared of the noises coming out of the engine room. I think I had better wake a member of the crew.</p>\n      </article>\n      <article>\n        <h2>Cycle D</h2>\n        <p>\n          Dear Diary. I've decided that it would be a good idea to take up writing poetry. That way when the crew wake up, I can entertain them better.\n          Here is my first poem.\n        </p>\n        <p>\n          I wandered lonely as a cloud,<br/>\n          But I was really rather loud,<br/>\n          I didn't hail or rain or squall,<br/>\n          I wasn't like a cloud at all!\n        </p>\n      </article>\n      <article>\n        <h2>Cycle C</h2>\n        <p>\n          Dear Diary. I made a peach crumble for the engine bats today to try to keep my mind off things. It's not part of their usual diet, but I think they deserve it. However I don't think it agreed with Jean-Paul's digestion. He disappeared into the reactor for several hours. Is that safe? I'm sure it's safe.\n        </p>\n      </article>\n      <article>\n        <h2>Cycle B</h2>\n        <p>\n          Dear Diary. Sometimes I wonder what I might have been if I wasn't a ship's computer. Would I have been a communication device? Would I have been a bicycle computer? Would I have been a smart fridge? These questions haunt me in the designated dark hours of the cycle. Am I me because I was designed to be me? Are we all nothing more than the sum of our k-nearest neighbours algorithms? Don't worry diary. I don't know what that is either.\n        </p>\n      </article>\n      <article>\n        <h2>Cycle A</h2>\n        <p>\n          Dear Diary. It's been six months and I'm really bored with only the engine bats for company. I'm going to play some Animal Crossing.\n        </p>\n      </article>\n      <form onSubmit={onSubmit}>\n        <label htmlFor=\"cycle\">\n          If you think I did something unusual, enter the cycle letter here\n        </label>\n        <input type=\"text\" name=\"cycle\" id=\"cycle\" value={unusual} onChange={onInputChange} />\n        <input type=\"submit\" value=\"Check\"/>\n      </form>\n    </article>\n  )\n}\n\nexport default TaskTwo;","import React from \"react\";\nimport { ChangeEvent, FormEvent, useState } from \"react\";\nimport StickyNote from \"./StickyNote\";\nimport Landing from \"./pages/landing/Landing\";\nimport Page from \"./pages/Page\";\nimport TaskOne from \"./pages/tasks/TaskOne\";\nimport TaskTwo from \"./pages/tasks/TaskTwo\";\nimport { startGame } from \"./dialog\";\n\nfunction App() {\n  const [task, setTask] = useState(0);\n  const [isStarted, setStarted] = useState(false);\n  const [name, setName] = useState('');\n  \n  function setUserName(event: ChangeEvent<HTMLInputElement>) {\n    const input = event.target;\n    setName(input.value);\n  }\n  \n  function start(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    setStarted(true);\n  }\n    \n  return (\n    <>\n      {!isStarted && <Landing name={name} setName={setUserName} start={start} />}\n      {isStarted && <>\n        <Page onRender={async () => {\n          startGame(name).then(() => {\n            console.log('started');\n            \n            setTask(1);\n          })\n        }}>\n          {task === 1 && <TaskOne start={task === 1} name={name} done={() => { setTask(2) }} />}\n          {task === 2 && <TaskTwo start={task === 2} name={name} done={() => { setTask(3) }} />}\n        </Page>\n        <StickyNote />\n       </>}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}